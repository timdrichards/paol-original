// Including Boost
#include <boost/lambda/lambda.hpp>
#include <boost/thread.hpp>
#include <boost/date_time.hpp>
#include <boost/interprocess/containers/vector.hpp>

//Including C++ Libs
#include <iostream>
#include <iterator>
#include <queue>
//#include <algorithm>
#include <cstdio>

//Open CV
#include "opencv/cv.h"
#include "opencv/highgui.h"

#include "buffer.h"
#include "producer.h"
#include "consumer.h"
#include "process.h"

using namespace cv;
using namespace boost;

void WhiteBoardProcess::run()
{
  cv::Mat inputImg;
  cv::Mat backgroundImg;
  inputImg = pop();
  backgroundImg = inputImg;
  cv::Point centerPoint(-1,-1);
  while(inputImg.data)
    {
#ifndef _debug_
      std::cout<<"Processor:: Pushing and poppin!"<<std::endl;
#endif
      cv::blur(inputImg, backgroundImg, cv::Size(25,25), centerPoint, 1);
      output->push(backgroundImg);
      std::cout<<backgroundImg[1][1].r<<std::endl;
      inputImg = pop();
    };
#ifndef _debug_
  std::cout<<"Processor:: Loop Ended"<<std::endl;
#endif
  cv::Mat nullImage;
  output->push(nullImage);
  output->stop();
#ifndef _debug_
  std::cout<<"Processor:: Null image passed"<<std::endl;
#endif
};

